{"version":3,"file":"static/js/43.c1218d45.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAO,mCAEAC,EAAmB,mCAAG,sGACVF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD9B,uBACzBE,EADyB,EACzBA,KADyB,kBAE1BA,EAAKC,SAFqB,2CAAH,qDAKnBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCK,EADnC,gCADM,uBACrBH,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,sDAOfG,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,IAD9B,cACzBQ,EADyB,yBAExBA,EAASN,MAFe,2CAAH,sDAKjBO,EAAY,mCAAG,WAAMF,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,IAFZ,cACpBQ,EADoB,yBAInBA,EAASN,MAJU,2CAAH,sDAOZQ,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,IAFZ,cACpBQ,EADoB,yBAInBA,EAASN,MAJU,2CAAH,qD,kJC1BZS,EAAgBC,EAAAA,EAAAA,IAAH,yHAQbC,EAAiBD,EAAAA,EAAAA,GAAH,kHAOdE,EAAgBF,EAAAA,EAAAA,EAAH,sBACbG,EAAoBH,EAAAA,EAAAA,EAAH,sBACjBI,EAAoBJ,EAAAA,EAAAA,IAAH,4GAOjBK,GAAgBL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,qHAObO,GAAaP,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,4I,SCpBVQ,EAAY,SAAC,GAAiB,IAAD,IAAdC,EAAc,EAAdA,QACpBC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAEtCC,EACNP,EADMO,YAAaC,EACnBR,EADmBQ,MAAOC,EAC1BT,EAD0BS,aAAcC,EACxCV,EADwCU,SAAUC,EAClDX,EADkDW,OAAQC,EAC1DZ,EAD0DY,QAG5D,OACE,4BACE,SAACd,EAAD,CAAYe,GAAIV,EAAOW,QAAvB,6BAEA,UAACxB,EAAD,YACE,yBACmB,OAAhBiB,GACC,gBACEQ,IAAG,0CAAqCR,GACxCS,IAAKR,EACLS,MAAM,MACNC,OAAO,SAGT,gBACEH,IAAI,qDACJC,IAAKR,EACLS,MAAM,MACNC,OAAO,WAIb,4BACE,UAAC1B,EAAD,eAAkBgB,MAClB,UAACf,EAAD,4BAA8BgB,MAC9B,UAACf,EAAD,wBAA8BgB,MAC9B,oCAEGC,EAAOQ,KAAI,SAAAC,GACV,OAAO,wBAAoBA,EAAMpC,MAAjBoC,EAAMC,GACvB,QAEH,qCAAaT,EAAb,iBAGJ,UAACjB,EAAD,YACE,SAACC,EAAD,CAAeiB,GAAG,OAAlB,mBACA,SAACjB,EAAD,CAAeiB,GAAG,UAAlB,yBAEF,SAAC,KAAD,MAGL,EChDD,EAVqB,WACnB,OAAwBS,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQtC,GAAYuC,EAAAA,EAAAA,MAAZvC,QAMR,OAJAwC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAkCzC,GAAS0C,MAAK,SAAA/C,GAAI,OAAI2C,EAAQ3C,EAAZ,GACrD,GAAE,CAACK,KAEG,yBAAe,OAATqC,IAAiB,SAACxB,EAAD,CAAWC,QAASuB,KACnD,C","sources":["components/api.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = `85b0d82f9eaa6a849c70c68abc52d407`;\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const fetchSeachMovie = async name => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n  );\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieCardWrap = styled.div`\n  display: flex;\n  gap: 25px;\n  font-size: 26px;\n  margin-bottom: 50px;\n  margin-top: 35px;\n`;\n\nexport const MovieCardTitle = styled.h3`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 32px;\n  color: black;\n`;\n\nexport const MovieCardVote = styled.p``;\nexport const MovieCardOverview = styled.p``;\nexport const MovieCardLinkWrap = styled.div`\n  margin-bottom: 50px;\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n`;\n\nexport const MovieCardLink = styled(NavLink)`\n  text-decoration: none;\n  font-size: 25px;\n  color: black;\n  text-transform: uppercase;\n`;\n\nexport const ButtonBack = styled(NavLink)`\n  border-radius: 7px;\n  text-decoration: none;\n  padding: 10px;\n  background-color: #4d994da0;\n  color: white;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieCardWrap,\n  MovieCardTitle,\n  MovieCardVote,\n  MovieCardOverview,\n  MovieCardLinkWrap,\n  MovieCardLink,\n  ButtonBack,\n} from './MovieCard.styled';\n\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\n\nexport const MovieCard = ({ details }) => {\n  const location = useLocation();\n  const locRef = useRef(location.state?.from ?? '/movies');\n\n  const { poster_path, title, vote_average, overview, genres, runtime } =\n    details;\n\n  return (\n    <div>\n      <ButtonBack to={locRef.current}>Back to movies</ButtonBack>\n\n      <MovieCardWrap>\n        <div>\n          {poster_path !== null ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n              width=\"470\"\n              height=\"600\"\n            />\n          ) : (\n            <img\n              src=\"https://fomantic-ui.com/images/wireframe/image.png\"\n              alt={title}\n              width=\"470\"\n              height=\"600\"\n            />\n          )}\n        </div>\n        <div>\n          <MovieCardTitle> {title}</MovieCardTitle>\n          <MovieCardVote>Vote average: {vote_average}</MovieCardVote>\n          <MovieCardOverview>Overview: {overview}</MovieCardOverview>\n          <ul>\n            Genres:\n            {genres.map(genre => {\n              return <li key={genre.id}>{genre.name}</li>;\n            })}\n          </ul>\n          <p>Runtime: {runtime} min</p>\n        </div>\n      </MovieCardWrap>\n      <MovieCardLinkWrap>\n        <MovieCardLink to=\"cast\">Cast</MovieCardLink>\n        <MovieCardLink to=\"reviews\">Reviews</MovieCardLink>\n      </MovieCardLinkWrap>\n      <Outlet />\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  details: PropTypes.object.isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as getMovieDetails from '../components/api';\nimport { MovieCard } from '../components/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails.fetchMovieDetails(movieId).then(data => setFilm(data));\n  }, [movieId]);\n\n  return <div>{film !== null && <MovieCard details={film}></MovieCard>}</div>;\n};\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchTrendingMovies","data","results","fetchSeachMovie","name","fetchMovieDetails","movieId","response","fetchCredits","fetchReviews","MovieCardWrap","styled","MovieCardTitle","MovieCardVote","MovieCardOverview","MovieCardLinkWrap","MovieCardLink","NavLink","ButtonBack","MovieCard","details","location","useLocation","locRef","useRef","state","from","poster_path","title","vote_average","overview","genres","runtime","to","current","src","alt","width","height","map","genre","id","useState","film","setFilm","useParams","useEffect","getMovieDetails","then"],"sourceRoot":""}